[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "django.conf",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.conf",
        "description": "django.conf",
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "CheckoutSessionView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "useraccount.models",
        "description": "useraccount.models",
        "isExtraImport": true,
        "detail": "useraccount.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "useraccount.models",
        "description": "useraccount.models",
        "isExtraImport": true,
        "detail": "useraccount.models",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "stripe",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "stripe",
        "description": "stripe",
        "detail": "stripe",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "FileInput",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "ClearableFileInput",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Condition",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "PasswordChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "RadioSelect",
        "importPath": "django.forms.widgets",
        "description": "django.forms.widgets",
        "isExtraImport": true,
        "detail": "django.forms.widgets",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "EmailValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "LogoutView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "PasswordChangeView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "categories.migrations.0001_initial",
        "description": "categories.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "categories.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "categories.migrations.0002_remove_category_description",
        "description": "categories.migrations.0002_remove_category_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('categories', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='category',\n            name='description',\n        ),\n    ]",
        "detail": "categories.migrations.0002_remove_category_description",
        "documentation": {}
    },
    {
        "label": "CategoriesConfig",
        "kind": 6,
        "importPath": "categories.apps",
        "description": "categories.apps",
        "peekOfCode": "class CategoriesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'categories'",
        "detail": "categories.apps",
        "documentation": {}
    },
    {
        "label": "sidebar_data",
        "kind": 2,
        "importPath": "categories.context_processors",
        "description": "categories.context_processors",
        "peekOfCode": "def sidebar_data(request):\n    # Your logic to fetch sidebar data, such as categories, tags, or any other dynamic content\n    # You can fetch the data from your models or any other data source\n    sidebar_data = {\n        \"categories\": Category.objects.all(),  # Assuming you have a Category model\n        # Add any other data you need for your sidebar\n        \"condition\": Condition.objects.all(),\n    }\n    return {\"sidebar_data\": sidebar_data}",
        "detail": "categories.context_processors",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "categories.models",
        "description": "categories.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=100)\n    slug = models.SlugField(unique=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        verbose_name_plural = \"Categories\"\n    def __str__(self):\n        return self.name\nclass Condition(models.Model):",
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Condition",
        "kind": 6,
        "importPath": "categories.models",
        "description": "categories.models",
        "peekOfCode": "class Condition(models.Model):\n    name = models.CharField(max_length=100)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.name",
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "categories.urls",
        "description": "categories.urls",
        "peekOfCode": "app_name = \"categories\"\nurlpatterns = [\n    path(\"category/<int:category_id>/\", category_products, name=\"category_products\"),\n    path(\n        \"condition/<int:condition_id>/\", condition_products, name=\"condition_products\"\n    ),\n]",
        "detail": "categories.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "categories.urls",
        "description": "categories.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"category/<int:category_id>/\", category_products, name=\"category_products\"),\n    path(\n        \"condition/<int:condition_id>/\", condition_products, name=\"condition_products\"\n    ),\n]",
        "detail": "categories.urls",
        "documentation": {}
    },
    {
        "label": "category_products",
        "kind": 2,
        "importPath": "categories.views",
        "description": "categories.views",
        "peekOfCode": "def category_products(request, category_id):\n    category = Category.objects.get(id=category_id)\n    products = Product.objects.filter(category=category)\n    context = {\"category\": category, \"products\": products}\n    return render(request, \"category_products.html\", context)\ndef condition_products(request, condition_id):\n    condition = Condition.objects.get(id=condition_id)\n    products = Product.objects.filter(condition=condition)\n    context = {\"condition\": condition, \"products\": products}\n    return render(request, \"condition_products.html\", context)",
        "detail": "categories.views",
        "documentation": {}
    },
    {
        "label": "condition_products",
        "kind": 2,
        "importPath": "categories.views",
        "description": "categories.views",
        "peekOfCode": "def condition_products(request, condition_id):\n    condition = Condition.objects.get(id=condition_id)\n    products = Product.objects.filter(condition=condition)\n    context = {\"condition\": condition, \"products\": products}\n    return render(request, \"condition_products.html\", context)",
        "detail": "categories.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecommerce.asgi",
        "description": "ecommerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "ecommerce.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-o=val7gz&9=8y%cf4m0+$!dp!hv2^80j*mv&(swj^)8n)o3d2g\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-o=val7gz&9=8y%cf4m0+$!dp!hv2^80j*mv&(swj^)8n)o3d2g\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"useraccount\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"useraccount\",\n    \"products\",\n    \"payment\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"django_browser_reload.middleware.BrowserReloadMiddleware\",\n]",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "ROOT_URLCONF = \"ecommerce.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "WSGI_APPLICATION = \"ecommerce.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# DATABASES = {",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# DATABASES = {\n#     \"default\": {\n#         \"ENGINE\": \"django.db.backends.postgresql_psycopg2\",\n#         \"NAME\": config(\"DB_NAME\"),",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATICFILES_DIRS = [BASE_DIR / \"static\"]\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"useraccount.User\"\nLOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / \"static\"]\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"useraccount.User\"\nLOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "MEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"useraccount.User\"\nLOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"\nINTERNAL_IPS = [",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"mediafiles\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"useraccount.User\"\nLOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"useraccount.User\"\nLOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nTAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"useraccount.User\"\nLOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nTAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "LOGIN_URL = \"/login/\"\nLOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nTAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = \"/\"\nLOGOUT_URL = \"logout\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nTAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "LOGOUT_URL = \"logout\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nTAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nTAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TAILWIND_APP_NAME",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "TAILWIND_APP_NAME = \"theme\"\nSTRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STRIPE_PUBLIC_KEY_TEST",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STRIPE_PUBLIC_KEY_TEST = \"pk_test_51LAWwwLS9FlJqzn09u4POvHER01KqYneO32gVutNcKoiPblE84GvlV6p5wvVv2AH54ZJMWg44nYWfEw8tWgBXoIh00mz3ZSnh2\"\nSTRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STRIPE_SECRET_KEY_TEST",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STRIPE_SECRET_KEY_TEST = \"sk_test_51LAWwwLS9FlJqzn0YovxrtzxBAI7A2J5lCu6GNfdPt5ePb0IGhgxuS4j93W8XJ3BkqoiXknf276Fepoj8jdn8EWg00QwVDsxss\"\nSTRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STRIPE_WEBHOOK_SECRET_TEST",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STRIPE_WEBHOOK_SECRET_TEST = \"\"\nREDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "REDIRECT_DOMAIN",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "REDIRECT_DOMAIN = \"http://127.0.0.1:8000\"\nDEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PAGINATION_SIZE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DEFAULT_PAGINATION_SIZE = 12",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\n        \"\",\n        include(\"products.urls\"),\n    ),\n    path(\n        \"\",\n        include(\"useraccount.urls\"),\n    ),",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecommerce.wsgi",
        "description": "ecommerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "ecommerce.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payment.migrations.0001_initial",
        "description": "payment.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('products', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserPayment',\n            fields=[",
        "detail": "payment.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "PaymentConfig",
        "kind": 6,
        "importPath": "payment.apps",
        "description": "payment.apps",
        "peekOfCode": "class PaymentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'payment'",
        "detail": "payment.apps",
        "documentation": {}
    },
    {
        "label": "UserPayment",
        "kind": 6,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "class UserPayment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    checkout_id = models.CharField(max_length=500)\n    is_successful = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    products = models.ManyToManyField(Product)\n    # class UserPayment(models.Model):\n    #     user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    #     checkout_id = models.CharField(max_length=255)\n    #     is_successful = models.BooleanField(default=False)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "create_user_payment",
        "kind": 2,
        "importPath": "payment.models",
        "description": "payment.models",
        "peekOfCode": "def create_user_payment(sender, instance, created, **kwargs):\n    if created:\n        UserPayment.objects.create(user=instance)",
        "detail": "payment.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "payment.urls",
        "description": "payment.urls",
        "peekOfCode": "app_name = \"payment\"\nurlpatterns = [\n    # path(\"checkout/<int:product_id>/\", CheckoutView.as_view(), name=\"checkout\"),\n    path(\"checkout/<int:product_id>/\", product_page, name=\"checkout\"),\n    path(\"product_page/\", product_page, name=\"product_page\"),\n    path(\"payment_successful/\", payment_successful, name=\"payment_successful\"),\n    path(\"payment_cancelled/\", payment_cancelled, name=\"payment_cancelled\"),\n    path(\"stripe_webhook/   \", stripe_webhook, name=\"stripe_webhook\"),\n    # path(\"payment_history/\", PaymentHistoryView.as_view(), name=\"payment_history\"),\n    path(\"payment_history/<int:userid>\", purchasedHistory, name=\"payment_history\"),",
        "detail": "payment.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "payment.urls",
        "description": "payment.urls",
        "peekOfCode": "urlpatterns = [\n    # path(\"checkout/<int:product_id>/\", CheckoutView.as_view(), name=\"checkout\"),\n    path(\"checkout/<int:product_id>/\", product_page, name=\"checkout\"),\n    path(\"product_page/\", product_page, name=\"product_page\"),\n    path(\"payment_successful/\", payment_successful, name=\"payment_successful\"),\n    path(\"payment_cancelled/\", payment_cancelled, name=\"payment_cancelled\"),\n    path(\"stripe_webhook/   \", stripe_webhook, name=\"stripe_webhook\"),\n    # path(\"payment_history/\", PaymentHistoryView.as_view(), name=\"payment_history\"),\n    path(\"payment_history/<int:userid>\", purchasedHistory, name=\"payment_history\"),\n]",
        "detail": "payment.urls",
        "documentation": {}
    },
    {
        "label": "CheckoutView",
        "kind": 6,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "class CheckoutView(LoginRequiredMixin, TemplateView):\n    model = Product\n    template_name = \"checkout.html\"\n    context_object_name = \"product\"\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        product_id = self.kwargs.get(\"product_id\")\n        context[\"product\"] = get_object_or_404(Product, id=product_id)\n        return context\n@login_required(login_url=\"login\")",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "product_page",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def product_page(request, product_id):\n    stripe.api_key = settings.STRIPE_SECRET_KEY_TEST\n    try:\n        product = Product.objects.get(id=product_id)\n    except Product.DoesNotExist:\n        raise Http404(\"Product does not exist\")\n    if request.method == \"POST\":\n        checkout_session = stripe.checkout.Session.create(\n            payment_method_types=[\"card\"],\n            line_items=[",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "payment_successful",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def payment_successful(request):\n    stripe.api_key = settings.STRIPE_SECRET_KEY_TEST\n    checkout_session_id = request.GET.get(\"session_id\", None)\n    session = stripe.checkout.Session.retrieve(checkout_session_id)\n    customer = stripe.Customer.retrieve(session.customer)\n    user_payment = UserPayment(\n        user=request.user, checkout_id=checkout_session_id, is_successful=True\n    )\n    user_payment.save()\n    payment_history = UserPayment.objects.filter(user=request.user, is_successful=True)",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "payment_cancelled",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def payment_cancelled(request):\n    stripe.api_key = settings.STRIPE_SECRET_KEY_TEST\n    return render(request, \"payment_cancelled.html\")\n@csrf_exempt\ndef stripe_webhook(request):\n    stripe.api_key = settings.STRIPE_SECRET_KEY_TEST\n    payload = request.body\n    signature_header = request.META[\"HTTP_STRIPE_SIGNATURE\"]\n    event = None\n    try:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "stripe_webhook",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def stripe_webhook(request):\n    stripe.api_key = settings.STRIPE_SECRET_KEY_TEST\n    payload = request.body\n    signature_header = request.META[\"HTTP_STRIPE_SIGNATURE\"]\n    event = None\n    try:\n        event = stripe.Webhook.construct_event(\n            payload, signature_header, settings.STRIPE_WEBHOOK_SECRET_TEST\n        )\n    except ValueError as e:",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "purchasedHistory",
        "kind": 2,
        "importPath": "payment.views",
        "description": "payment.views",
        "peekOfCode": "def purchasedHistory(request, userid):\n    purchasedHistory = UserPayment.objects.filter(user_id=userid)\n    return render(request, \"payment_history.html\", {\"payments\": purchasedHistory})",
        "detail": "payment.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0001_initial",
        "description": "products.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('categories', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Product',\n            fields=[",
        "detail": "products.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0002_rename_created_at_comment_timestamp_comment_parent",
        "description": "products.migrations.0002_rename_created_at_comment_timestamp_comment_parent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='comment',\n            old_name='created_at',\n            new_name='timestamp',\n        ),",
        "detail": "products.migrations.0002_rename_created_at_comment_timestamp_comment_parent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0003_rename_timestamp_comment_created_at_and_more",
        "description": "products.migrations.0003_rename_timestamp_comment_created_at_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0002_rename_created_at_comment_timestamp_comment_parent'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='comment',\n            old_name='timestamp',\n            new_name='created_at',\n        ),",
        "detail": "products.migrations.0003_rename_timestamp_comment_created_at_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0004_rename_user_comment_author_and_more",
        "description": "products.migrations.0004_rename_user_comment_author_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0003_rename_timestamp_comment_created_at_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='comment',\n            old_name='user',\n            new_name='author',\n        ),",
        "detail": "products.migrations.0004_rename_user_comment_author_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0005_rename_text_comment_content_and_more",
        "description": "products.migrations.0005_rename_text_comment_content_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0004_rename_user_comment_author_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='comment',\n            old_name='text',\n            new_name='content',\n        ),",
        "detail": "products.migrations.0005_rename_text_comment_content_and_more",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    formfield_overrides = {\n        models.BinaryField: {\"widget\": ClearableFileInput(attrs={\"multiple\": True})},\n    }\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Comment)",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "ProductsConfig",
        "kind": 6,
        "importPath": "products.apps",
        "description": "products.apps",
        "peekOfCode": "class ProductsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'products'",
        "detail": "products.apps",
        "documentation": {}
    },
    {
        "label": "ProductForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class ProductForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = [\n            \"category\",\n            \"condition\",\n            \"name\",\n            \"brand\",\n            \"description\",\n            \"price\",",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "CommentForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class CommentForm(forms.Form):\n    content = forms.CharField(widget=forms.Textarea(attrs={\"rows\": 3}), label=\"Content\")\n    product_id = forms.IntegerField(widget=forms.HiddenInput)\n    def __init__(self, *args, **kwargs):\n        super(CommentForm, self).__init__(*args, **kwargs)\n        self.fields[\"content\"].widget.attrs.update(\n            {\n                \"class\": \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500\"\n            }\n        )  #     product_id = forms.IntegerField(widget=forms.HiddenInput)",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class Product(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    condition = models.ForeignKey(Condition, on_delete=models.CASCADE)\n    name = models.CharField(max_length=100)\n    brand = models.CharField(max_length=100, null=True, blank=True)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    manufactured_date = models.DateField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class Comment(models.Model):\n    product = models.ForeignKey(\n        Product, related_name=\"comments\", on_delete=models.CASCADE\n    )\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.user.username} - {self.created_at.strftime('%m/%d/%Y')}\"",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "products.urls",
        "description": "products.urls",
        "peekOfCode": "app_name = \"products\"\nurlpatterns = [\n    path(\"\", HomepageView.as_view(), name=\"homepage\"),\n    path(\"postproduct/\", PostProduct.as_view(), name=\"postproduct\"),\n    path(\"products/<int:pk>/\", product_detail, name=\"productdetail\"),\n    path(\"editproducts/<int:pk>/\", ProductEditView.as_view(), name=\"editproduct\"),\n    path(\n        \"delete_comment/<int:comment_id>/\",\n        delete_comment,\n        name=\"delete_comment\",",
        "detail": "products.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "products.urls",
        "description": "products.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", HomepageView.as_view(), name=\"homepage\"),\n    path(\"postproduct/\", PostProduct.as_view(), name=\"postproduct\"),\n    path(\"products/<int:pk>/\", product_detail, name=\"productdetail\"),\n    path(\"editproducts/<int:pk>/\", ProductEditView.as_view(), name=\"editproduct\"),\n    path(\n        \"delete_comment/<int:comment_id>/\",\n        delete_comment,\n        name=\"delete_comment\",\n    ),",
        "detail": "products.urls",
        "documentation": {}
    },
    {
        "label": "HomepageView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class HomepageView(ListView):\n    model = Product\n    template_name = \"homepage.html\"\n    context_object_name = \"products\"\n    paginate_by = settings.DEFAULT_PAGINATION_SIZE\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        search_term = self.request.GET.get(\"search_term\", \"\")\n        if search_term:\n            queryset = queryset.filter(name__icontains=search_term)",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "PostProduct",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class PostProduct(LoginRequiredMixin, CreateView):\n    model = Product\n    fields = [\n        \"category\",\n        \"condition\",\n        \"name\",\n        \"brand\",\n        \"description\",\n        \"price\",\n        \"manufactured_date\",",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductEditView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductEditView(LoginRequiredMixin, UpdateView):\n    model = Product\n    template_name = \"edit_product.html\"\n    fields = [\n        \"condition\",\n        \"category\",\n        \"name\",\n        \"brand\",\n        \"description\",\n        \"price\",",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductDeleteView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductDeleteView(LoginRequiredMixin, DeleteView):\n    model = Product\n    template_name = \"user_profile.html\"\n    success_url = reverse_lazy(\"useraccount:userprofile\")\n    def delete(self, request, *args, **kwargs):\n        self.object = self.get_object()\n        success_url = reverse_lazy(\"useraccount:userprofile\")\n        self.object.delete()\n        return redirect(success_url)\nclass CheckoutSessionView(View):",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "CheckoutSessionView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class CheckoutSessionView(View):\n    def post(self, request, *args, **kwargs):\n        checkout_session = stripe.checkout.Session.create(\n            line_items=[\n                {\n                    # Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n                    \"price\": \"{{PRICE_ID}}\",\n                    \"quantity\": 1,\n                },\n            ],",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "product_detail",
        "kind": 2,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "def product_detail(request, pk):\n    product = get_object_or_404(Product, pk=pk)\n    comment_form = CommentForm(request.POST or None, initial={\"product_id\": product.pk})\n    if request.method == \"POST\" and comment_form.is_valid():\n        # Create a new Comment object\n        comment = Comment(\n            product=product,\n            user=request.user,\n            content=comment_form.cleaned_data[\"content\"],\n        )",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "delete_comment",
        "kind": 2,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "def delete_comment(request, comment_id):\n    comment = get_object_or_404(Comment, id=comment_id)\n    # Check if the logged-in user is the owner of the comment\n    if comment.user == request.user:\n        comment.delete()\n    # Redirect to the product detail page or any other desired page\n    return redirect(\"/\")\n# EDIT COMMENT\ndef edit_comment(request, comment_id):\n    comment = get_object_or_404(Comment, id=comment_id)",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "edit_comment",
        "kind": 2,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "def edit_comment(request, comment_id):\n    comment = get_object_or_404(Comment, id=comment_id)\n    if request.method == \"POST\":\n        edit_form = CommentForm(request.POST)\n        if edit_form.is_valid():\n            comment.content = form.cleaned_data[\"content\"]\n            comment.save()\n            return redirect(\"productdetail\", pk=comment.product.pk)\n    else:\n        form = CommentForm(",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "sidebar",
        "kind": 2,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "def sidebar(request):\n    categories = Category.objects.all()\n    context = {\"categories\": categories}\n    return render(request, \"sidebar.html\", context)",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ThemeConfig",
        "kind": 6,
        "importPath": "theme.apps",
        "description": "theme.apps",
        "peekOfCode": "class ThemeConfig(AppConfig):\n    name = 'theme'",
        "detail": "theme.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "useraccount.migrations.0001_initial",
        "description": "useraccount.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "useraccount.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "useraccount.migrations.0002_alter_user_image",
        "description": "useraccount.migrations.0002_alter_user_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('useraccount', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='image',\n            field=models.ImageField(blank=True, default='images/default.jpg', null=True, upload_to='images/'),\n        ),",
        "detail": "useraccount.migrations.0002_alter_user_image",
        "documentation": {}
    },
    {
        "label": "CustomUserChangeForm",
        "kind": 6,
        "importPath": "useraccount.admin",
        "description": "useraccount.admin",
        "peekOfCode": "class CustomUserChangeForm(UserChangeForm):\n    class Meta(UserChangeForm.Meta):\n        model = User\nclass CustomUserAdmin(UserAdmin):\n    form = CustomUserChangeForm\n    fieldsets = UserAdmin.fieldsets + ((None, {\"fields\": (\"image\",)}),)\nadmin.site.register(User, CustomUserAdmin)",
        "detail": "useraccount.admin",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "useraccount.admin",
        "description": "useraccount.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    form = CustomUserChangeForm\n    fieldsets = UserAdmin.fieldsets + ((None, {\"fields\": (\"image\",)}),)\nadmin.site.register(User, CustomUserAdmin)",
        "detail": "useraccount.admin",
        "documentation": {}
    },
    {
        "label": "UseraccountConfig",
        "kind": 6,
        "importPath": "useraccount.apps",
        "description": "useraccount.apps",
        "peekOfCode": "class UseraccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'useraccount'",
        "detail": "useraccount.apps",
        "documentation": {}
    },
    {
        "label": "UserForm",
        "kind": 6,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "class UserForm(UserCreationForm):\n    phone_number = forms.CharField(\n        max_length=10,\n        widget=forms.TextInput(attrs={\"class\": \"form-control\"}),\n        validators=[validate_phone_number],\n    )\n    email = forms.CharField(\n        widget=forms.EmailInput(attrs={\"class\": \"form-control\"}),\n        validators=[EmailValidator(message=\"Please enter a valid email address.\")],\n    )",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "kind": 6,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "class LoginForm(AuthenticationForm):\n    username = forms.CharField(\n        max_length=254,\n        widget=forms.TextInput(\n            attrs={\n                \"name\": \"username\",\n                \"class\": \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\n                \"autofocus\": True,\n            }\n        ),",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "EditProfileForm",
        "kind": 6,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "class EditProfileForm(UserChangeForm):\n    class Meta:\n        model = get_user_model()\n        fields = (\n            \"username\",\n            \"first_name\",\n            \"last_name\",\n            \"email\",\n            \"phone_number\",\n            \"image\",",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "ChangePasswordForm",
        "kind": 6,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "class ChangePasswordForm(PasswordChangeForm):\n    old_password = forms.CharField(\n        label=\"Old Password\",\n        widget=forms.PasswordInput(\n            attrs={\n                \"class\": \"w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm\",\n            }\n        ),\n    )\n    new_password1 = forms.CharField(",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "validate_phone_number",
        "kind": 2,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "def validate_phone_number(value):\n    if not value.isdigit():\n        raise ValidationError(_(\"Invalid phone number. Please enter only digits.\"))\n    if len(value) != 10:\n        raise ValidationError(\n            _(\"Invalid phone number. The phone number must have 10 digits.\")\n        )\ndef validate_first_name(value):\n    if value.isdigit():\n        raise ValidationError(_(\"Invalid . Please enter only alphabets.\"))",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "validate_first_name",
        "kind": 2,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "def validate_first_name(value):\n    if value.isdigit():\n        raise ValidationError(_(\"Invalid . Please enter only alphabets.\"))\n    # if len(value)>4:\n    #     raise ValidationError(_('Invalid first name. First name should be more than 4 and less than character.'))\n    # raise ValidationError(_('Invalid first name. First name should be less than 30 character.'))\ndef validate_last_name(value):\n    if value.isdigit():\n        raise ValidationError(_(\"Invalid . Please enter only alphabets.\"))\n    # if len(value) >4:",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "validate_last_name",
        "kind": 2,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "def validate_last_name(value):\n    if value.isdigit():\n        raise ValidationError(_(\"Invalid . Please enter only alphabets.\"))\n    # if len(value) >4:\n    #     raise ValidationError(_('Invalid last name. Last name should be more than 4 character.'))\n    # if len(value) <30:\n    #     raise ValidationError(_('Invalid last name. First name should be less than 30 character.'))\nclass UserForm(UserCreationForm):\n    phone_number = forms.CharField(\n        max_length=10,",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "useraccount.forms",
        "description": "useraccount.forms",
        "peekOfCode": "User = get_user_model()\ndef validate_phone_number(value):\n    if not value.isdigit():\n        raise ValidationError(_(\"Invalid phone number. Please enter only digits.\"))\n    if len(value) != 10:\n        raise ValidationError(\n            _(\"Invalid phone number. The phone number must have 10 digits.\")\n        )\ndef validate_first_name(value):\n    if value.isdigit():",
        "detail": "useraccount.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "useraccount.models",
        "description": "useraccount.models",
        "peekOfCode": "class User(AbstractUser):\n    phone_number = models.CharField(max_length=20, null=True, blank=True)\n    image = models.ImageField(\n        upload_to=\"images/\",\n        blank=True,\n        null=True,\n        default=\"images/default.jpg\",\n    )",
        "detail": "useraccount.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "useraccount.serializers",
        "description": "useraccount.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ('id', 'username', 'email', 'first_name', 'last_name', 'date_of_birth', 'gender', 'phone_number', 'address', 'profile_picture', 'date_joined', 'password')\n        extra_kwargs = {'password': {'write_only': True}}\n    def create(self, validated_data):\n        password = validated_data.pop('password', None)\n        user = User(**validated_data)\n        if password is not None:\n            user.set_password(password)",
        "detail": "useraccount.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "useraccount.urls",
        "description": "useraccount.urls",
        "peekOfCode": "app_name = \"useraccount\"\nurlpatterns = [\n    path(\"logout/\", Logout.as_view(), name=\"logout\"),\n    path(\"login/\", MyLoginView.as_view(), name=\"login\"),\n    path(\"register/\", MyRegisterView.as_view(), name=\"register\"),\n    path(\"userprofile/\", UserProfile.as_view(), name=\"userprofile\"),\n    path(\"editprofile/\", EditProfileView.as_view(), name=\"edit_profile\"),\n    path(\"changepassword/\", ChangePasswordView.as_view(), name=\"changepassword\"),\n]",
        "detail": "useraccount.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "useraccount.urls",
        "description": "useraccount.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"logout/\", Logout.as_view(), name=\"logout\"),\n    path(\"login/\", MyLoginView.as_view(), name=\"login\"),\n    path(\"register/\", MyRegisterView.as_view(), name=\"register\"),\n    path(\"userprofile/\", UserProfile.as_view(), name=\"userprofile\"),\n    path(\"editprofile/\", EditProfileView.as_view(), name=\"edit_profile\"),\n    path(\"changepassword/\", ChangePasswordView.as_view(), name=\"changepassword\"),\n]",
        "detail": "useraccount.urls",
        "documentation": {}
    },
    {
        "label": "MyRegisterView",
        "kind": 6,
        "importPath": "useraccount.views",
        "description": "useraccount.views",
        "peekOfCode": "class MyRegisterView(CreateView):\n    model = User\n    form_class = UserForm\n    template_name = \"register.html\"\n    success_url = reverse_lazy(\"useraccount:login\")\nclass MyLoginView(LoginView):\n    form_class = LoginForm\n    template_name = \"login.html\"\n    def dispatch(self, request, *args, **kwargs):\n        if self.request.user.is_authenticated:  # Check if user is logged in",
        "detail": "useraccount.views",
        "documentation": {}
    },
    {
        "label": "MyLoginView",
        "kind": 6,
        "importPath": "useraccount.views",
        "description": "useraccount.views",
        "peekOfCode": "class MyLoginView(LoginView):\n    form_class = LoginForm\n    template_name = \"login.html\"\n    def dispatch(self, request, *args, **kwargs):\n        if self.request.user.is_authenticated:  # Check if user is logged in\n            # Redirect to homepage or any other URL\n            return redirect(\"products:homepage\")\n        else:\n            return super().dispatch(request, *args, **kwargs)\nclass UserProfile(LoginRequiredMixin, ListView):",
        "detail": "useraccount.views",
        "documentation": {}
    },
    {
        "label": "UserProfile",
        "kind": 6,
        "importPath": "useraccount.views",
        "description": "useraccount.views",
        "peekOfCode": "class UserProfile(LoginRequiredMixin, ListView):\n    model = Product\n    template_name = \"user_profile.html\"\n    context_object_name = \"products\"\n    def get_queryset(self):\n        # Return only products posted by the current user\n        queryset = super().get_queryset().filter(user=self.request.user)\n        return queryset\nclass Logout(LogoutView):\n    next_page = reverse_lazy(\"useraccount:login\")",
        "detail": "useraccount.views",
        "documentation": {}
    },
    {
        "label": "Logout",
        "kind": 6,
        "importPath": "useraccount.views",
        "description": "useraccount.views",
        "peekOfCode": "class Logout(LogoutView):\n    next_page = reverse_lazy(\"useraccount:login\")\nclass EditProfileView(LoginRequiredMixin, UpdateView):\n    model = get_user_model()\n    form_class = EditProfileForm\n    template_name = \"edit_profile.html\"\n    success_url = reverse_lazy(\"useraccount:edit_profile\")\n    def get_object(self):\n        return self.request.user\n    def get_context_data(self, **kwargs):",
        "detail": "useraccount.views",
        "documentation": {}
    },
    {
        "label": "EditProfileView",
        "kind": 6,
        "importPath": "useraccount.views",
        "description": "useraccount.views",
        "peekOfCode": "class EditProfileView(LoginRequiredMixin, UpdateView):\n    model = get_user_model()\n    form_class = EditProfileForm\n    template_name = \"edit_profile.html\"\n    success_url = reverse_lazy(\"useraccount:edit_profile\")\n    def get_object(self):\n        return self.request.user\n    def get_context_data(self, **kwargs):\n        context = super(EditProfileView, self).get_context_data(**kwargs)\n        if self.request.POST:",
        "detail": "useraccount.views",
        "documentation": {}
    },
    {
        "label": "ChangePasswordView",
        "kind": 6,
        "importPath": "useraccount.views",
        "description": "useraccount.views",
        "peekOfCode": "class ChangePasswordView(LoginRequiredMixin, PasswordChangeView):\n    template_name = \"change_password.html\"\n    form_class = ChangePasswordForm\n    context_object_name = \"form\"\n    success_url = reverse_lazy(\"useraccount:edit_profile\")",
        "detail": "useraccount.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]